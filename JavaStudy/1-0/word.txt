■IT
  IT・・・Information Technology/情報技術/コンピュータとネットワークを使用した技術、それらを使って進捗をもたらすこと
  ICT・・・Information and Communication Technology/情報通信科学/個人からの情報発信の意味合いが強い
  IoT・・・Internet of Things 身の回りのあらゆるモノがインターネットにつながる仕組み/例：テレビやエアコン冷蔵庫など

■ OS
  OS・・・オペレーティングシステム/パソコンやスマホを動かすための基本となるソフトウェア/windowsとmacの違いはOSの種類の違い
  Windows・・・Microsoft社のWindows OSが搭載されたパソコンをWindowsパソコン
  macOS (Mac OS X)・・・AppleのMac OSが搭載されたパソコンをMacintosh（Mac）パソコン
  UNIX・・・現存する中で最も古いOS/安全性が高く余計な機能が少ないので軽い/カーナビや携帯電話にも使われている/ライセンス契約
  Linux・・・UNIXを元にして作られた/安定的に動いて安いOS/androidにも使われている。/オープンソースで無料、改変配布自由

■ 言語・環境
  マークアップ／フロントエンド・・・タグを使って文書構造や視覚表現などの情報をコンピュータが認識できるように意味付けしていくこと/直接ユーザーの目に触れる部分のこと
    HTML・・・Hyper Text Markup Language/Webサイトに表示される情報を記載する言語/○○.html
    CSS・・・Cascading Style Sheets/HTMLに装飾を加えるための言語/○○.css
    JavaScript・・・クライアントサイドで動くプログラミング言語の一つ/ブラウザ上でページに動きを追加するのが仕事
  サーバーサイド
    .NET（C#, VB）.NET Framework (ドットネットフレームワークと読む）上で動作するアプリケーションを開発するためのプログラミング言語
    Java・・・オブジェクト指向のコンパイラ言語/多くの現場で使われている、汎用的でOSに依存しない/Javaの最大の特徴として、WORA（Write Once, Run Anywhere）、すなわち「一度書けば、どこでも動く」と端的に表現される汎用性の高さを挙げることができる。
      Java SE・・・Java言語でプログラミングを行う際に最低限必要な機能をまとめたもの
      Java EE（Jakarta EE）・・・JavaSEを元にしてサーバーサイドの機能を追加したもの/Webサイト（もしくはWebアプリケーション）を開発する際に用いられる/簡単に言えば「JavaSE+拡張機能」といった構成
    Perl・・・テキスト処理につよくweb開発に用いられることが多いスクリプト言語/多くのプラットフォーム上で動作する
    PHP・・・PHPはHTMLに埋め込むことができるため、web開発でよく利用されるスクリプト言語/javascriptと違いサーバーサイドでコードを実行する/wordpressなどブログ作成によく使われる
    Ruby・・・オブジェクト指向のインタプリタ言語/記述がシンプルでわかりやすい/日本人が作成した言語で日本語ドキュメントが豊富

■ サーバーソフト・・・サーバー機能を提供するソフトウェアの総称
  Apache(アパッチ) ・・・OSS（オープンソースソフトウェア）のWebサーバー/全世界の約４0％/オープンソースで開発者が多く幅広い動作環境に対応している/動的なコンテンツの処理に適しており、CGIやPHPなどに向いています
  nginx（エンジンエックス）・・・Apacheと同じOSS/メモリを効率的に使用できるので、処理速度が非常に高速な点が魅力/静的コンテンツを扱うのに適したWebサーバー/高負荷に強いという特徴
  IIS（アイアイエス）・・・Windows用に特化したWebサーバー機能/ApacheやNginxと違い、IISはOSSではない/直感的に操作可能なGUI/比較的難易度が優し目

■ SQL
  SQL・・・Structured Query Language/RDBの操作を行うための言語
  RDBMS・・・RDB(表形式でデータを管理するデータベース)を使用する際、それを管理するシステム
    MySQL・・・無償のオープンソースのデータベース/処理能力の速さに定評がある/Webとの親和性が高い
      Maria DB・・・MySQLの派生として開発されているオープンソースソフトウェア
    DB2・・・IBMが開発したネットワーク用関係(リレーショナル)型データベース
    Oracle DB・・・oracle社が開発した世界初の商用関係(リレーショナル)型データベース/ネットワーク用・大規模システム用
    PostgreSQL・・・通称「ポスグレ」や「ポストグレス」と呼ばれているオープンソースソフトウェアの関係(リレーショナル)型データベース/処理能力重視のMySQLとは異なり、バランスの良い機能に定評がある
    SQLite・・・パブリックドメイン(著作物や発明の知的財産権を放棄したライセンス形態)の関係(リレーショナル)型データベース/無料で動作が軽快
    SQL Server・・・SQLserverは、Microsoftが販売している法人向け関係(リレーショナル)型データベース/ネットワーク用・大規模用/特に中小企業で人気が高く、法人向けの関係(リレーショナル)型データベースでは、Oracleに次いで第2位の人気
CRUD・・・アプリケーションのデータ取り扱いに関して、基本的な処理の頭文字を並べたもの/Create Read Update Delete
トランザクション・・・データベースに対して行われるワンセットになった処理のまとまりのこと
  コミット・・・トランザクションを確定させる処理
  ロールバック・・・トランザクションを取り消す処理
排他制御（排他ロック）・・・共有資源（データやファイル）に対して複数のアクセスが見込まれる場合に、同時アクセスにより不整合が発生することを防ぐため、あるトランザクションが共有資源（データやファイル）にアクセスしている時は他トランザクションからはアクセスできないようにして直列に処理されるように制御すること
  楽観ロック・・・めったなことでは他者との同時更新は起きないであろう、という楽観的な前提の排他制御/データそのものに対してロックは行わずに、更新対象のデータがデータ取得時と同じ状態であることを確認してから更新することで、データの整合性を保証する方式
  悲観ロック・・・他者が同じデータに頻繁に変更を加えるであろう、という悲観的な前提の排他制御/更新対象のデータを取得する際にロックをかけることで、他のトランザクションから更新されないようにする方式
実行計画・・・どのようにテーブルに対して検索を行なうかが書かれた、SQLの実行手順書のようなもの
チューニング・・・システムやソフトウェアの性能を最大限引き出すように、構成や設定を調整すること
パフォーマンス・・コンピュータやネットワークといったシステムやその部品がどの程度よく機能するか・成果を発揮するかといった性能の度合いを指す/性能/頑張り具合
スロークエリ・・・データベースにおいて、時間のかかっているSQL(遅いSQL)のこと
クエリログ・・・MySQL サーバが実行した全ての SQL クエリを出力するログ
IDE（統合開発環境）・・・ソフトウェアの開発で利用されるソフトウェア（エディタ、コンパイラ、デバッガなど）を、その他の支援ツールなどとまとめてしまい、一つの開発環境で統合・統一的に扱えるようにした開発環境
  Eclipse・・・無料/Web開発で主流のオープンソースのクロスプラットフォーム高機能統合開発環境(IDE)/プラグインの追加で機能拡張可能/ソースコードを即実行可能
  NetBeans・・・無料/プロジェクト管理機能や入力支援機能を備えたオープンソースのIDE/「日本語版が用意されている」「GUIによるプログラム開発が手軽にできる」ことから、初心者でも導入しやすい
  SpringToolSuite・・・STSはEclipseをベースにして、SpringFramework開発に必要なものを組み込んだパッケージ
DBツール・・・データベース・ツールとは、データベース管理タスクに使用できるツール、ユーティリティおよび補助ツールの総称
  A5:SQL Mk-2・・・windows専用ソフト。高機能かつ軽量な汎用SQL開発ツール/GUI/様々なDBに接続可能/Excel、CSVとの親和性
  pgAdmin・・・GUIによるPostgreSQLの管理ツール
  DBeaver・・・「DBeaver Corp」が開発したマルチプラットフォーム対応のSQLクライアントツール
  MySQL Workbench・・・MySQLの公式サイトにてMySQL Serverと共に配布されている、データベースの設計・開発・管理を一本で実現している無料ツール
  Sequel Pro・・・Mac用のMySQLのデータをGUI操作で管理するためのアプリケーション
  TeamSQL・・・クロスプラットフォーム/2019年2月末でサポートを終了し、DataRowに代わった

■ 肩書
  PM・・・プロジェクトマネージャー/プロジェクトのすべての責任を負う立場/役割：プロジェクト全体の管理/責任：プロジェクト計画の達成責任
  PL・・・プロジェクトリーダー/プロジェクトを成功に導く立場/役割：プロジェクト全体の実行/責任：プロジェクトの実行責任
  PG（PE）・・・システムエンジニアが制作した設計書（仕様書）をもとにプログラミングを行い、機能を実装していく仕事
  SE・・・クライアントの要望を元に設計書（仕様書）を作る/コンピューターシステムの開発において、提案から設計・開発・テストまでの一連の流れに携わるエンジニア
  デザイナー・・・クライアントや依頼者の求めに応じたデザインを考案する仕事
  エンジニア・・・工学（エンジニアリング）に関する専門的な知識やスキルを持った人/技術者
    フロントエンド・エンジニア・・・Webサイトやwebアプリケーションでユーザーの目に直接触れる部分を作る。
    サーバーサイド・エンジニア・・・システムのユーザーには見えない機能を作る。バックエンドエンジニアよりサーバーへの技術が高い。
    バックエンド・エンジニア・・・システムのユーザーには見えない機能を作る。

■ UI（ユーザーインターフェース）
  UI・・・ユーザーインターフェイス（User Interface）の略称で、一般的にユーザー（利用者）と製品やサービスとのインターフェース（接点）すべてのことを意味する/見た目や、使いやすさのことを指す
    CUI・・・キャラクタユーザインタフェース/すべてのやり取りを文字によって行う方式
    GUI・・・グラフィカルユーザインタフェース/グラフィックを用いて操作を行う仕組み

■ ファイル／ディレクトリ
  ファイル・・・写真・動画・テキストなどまとまりを持った一つ一つのデータのこと
  拡張子・・・ファイルの種類を識別するためにファイル末尾につける文字列
  ディレクトリ・・・複数のファイルを整理して保存するための入れ物のこと
    ルート・ディレクトリ・・・階層構造における最上階層のディレクトリ
    カレント・ディレクトリ・・・現在作業中となるディレクトリ
  パス・・・ディレクトリやファイルの所在を示す文字列
    絶対パス・・・ルートディレクトリから指定するパス
    相対パス・・・カレントディレクトリから指定するパス

■ ネットワーク・・・複数台のコンピュータをケーブルや電波などで相互に接続して、相互に情報をやりとりする仕組みをコンピュータネットワーク
  LAN・・・(Local Area Network) とは、同じ建物の中にあるコンピュータ、プリンタ、サーバなどを接続してデータをやり取りするネットワーク
  WAN・・・(Wide Area Network) とは、地理的に離れた場所にあるコンピュータなど相互接続して、データをやり取りするネットワーク
  クライアント・・・サービスを利用しているユーザー側
  サーバー・・・データなどを扱っているサービス提供側

■ 各種プロトコル・・・通信規約（プロトコル）ネットワークに接続された機器同士が、通信を行う際にあらかじめ決められた共通のルールや手順
  HTTP・・・Hyper Text Transfer Protocol/Webページを表示するために、クライアントとサーバー間で行われるデータの送受信のプロトコル
  FTP・・・File Transfer Protocol/ファイルを送受信する時に使う通信プロトコル
  HTTPS・・・SSLを利用したhttp通信/httpとの違いは暗号化されているかどうか
  SSL・・・（Secure Socket Layer）とはインターネット上でのデータの通信を暗号化し、盗聴や改ざんを防ぐプロトコル/目的：webサイトを安全に表示する
  SSH・・・「Secure Shell」の略で、暗号や認証の技術を利用して、安全にリモートコンピュータと通信するためのプロトコル/目的：サーバーへの接続
  ポート、ポート番号・・・ネットワークでデータを通信するための扉のようなもの/ポート番号はその扉の番号/コンピュータが通信を行うために通信先のアプリケーションを特定するための番号
  HTTP、FTP、SSHの各ポート番号・・・HTTP=80 FTP(データ)=20 FTP(制御)=21  SSH=22
  ファイアウォール・・・信頼できない外部ネットワークの攻撃から内部ネットワークを保護するシステム。主に外部ネットワークと内部ネットワークの中継地点に設置され、セキュリティ上通信させると問題があるようなものを制御、監視する。
  TCP・・・Transmission Control Protocol/信頼性の高い通信を実現するために使用される通信プロトコル

■ IPアドレス
    IPアドレス・・・コンピュータやサーバーに設定されたインターネット上の住所
      グローバルIPアドレス・・・インターネット上のネットワーク機器に割り当てられるIPアドレス。
      プライベートIPアドレス・・・プライベートネットワーク上の機器に割り当てられるIPアドレスのこと

■ ドメイン
  ドメイン・・・ドメインとは数値とドットからなるIPアドレスを「人間が覚えやすいように文字列に変換したもの」
  DNS・・・「Domain Name System」の略であり、ドメインをIPアドレスに変換する仕組み
  VPN・・・Virtual Private Network。離れた場所の間を仮想的な専用線でつないで安全なデータ通信を実現する仕組み
  ブリッジ・・・ネットワーク中のデータ（の中にあるMACアドレス）を見て、行き先を振り分けてくれる機器
  プロキシサーバー・・・プロキシは代理の意味/内部と外部のネットワークの中継をする役割を持つサーバーで、情報の受け渡しを行なっている/ログが残る、ウィルスチェックができる、匿名性が確保できるなどの利点あり。

■ 電子メール
  SMTP・・・メールの送信(配送)の際に必要となるサーバー/送信メールを、送信先メールアドレスを管理するSMTPサーバーまで送る
  POP・・・メール受信の際に必要となるサーバー/受信したメールを受信者のパソコンなどにダウンロードする
  IMAP・・・メール受信の際に必要となるサーバー/IMAPサーバーを利用することで、受信者はメールサーバーに保存したままの状態でメールを読むことができる（保存容量の少ないスマホで利用される）

■ セッションとクッキー
  セッション・・・セッションは、クッキーと同じくサーバー上の一時ディレクトリに保存されたデータ/接続中のユーザーの活動に関連する情報/ブラウザとサーバーに保存
  クッキー・・・ユーザーのコンピューターに保存される小さなファイル/ユーザーの情報を保存している/クライアント側のマシン（主にブラウザ）にのみ保存
クッキーは「誰が」の情報を取得し、セッションは「何をしたか？」という情報を取得している
  キャッシュ・・・よく使うデータへのアクセスを速くするために、より高速な記憶装置に一時的に保存する仕組み

■ DB（データベース）について
  インデックス・・・テーブルの情報を探す時に検索の対象としてよく使用するカラムの値だけを取り出して検索しやすいようにしておいたもの

■ テストについて
  フロー・・・コンピュータプログラムを構成する命令や手続き、処理の流れ

■ チケット管理ツール・・・タスク管理ツールのこと。 プロジェクト毎に発生する各種タスクを発行して、制作者に対して仕事を依頼するためのもの
  タスク・・・コンピュータが処理を行う際の作業単位/ひとかたまりの仕事

■ バージョン管理・・・変更したバージョンを記録あるいは外部から保存して、過去のバージョンや最新のバージョンに切り替えること
  Git・・・ソースコードなどのファイルやフォルダの変更履歴を記録・追跡するためのバージョン管理システム
  SVN・・・バージョン管理システムのひとつで「Apache Subversion」のこと。
  デグレ・・・新しいバージョンのソフトウェアの品質が、以前より悪くなること。また、以前修正した不具合やバグが再発・復活すること。新しいファイルなどを古い内容で上書きしてしまい、更新内容が失われること
  マージツール・・・バージョン管理されているファイル群に対して行われた変更を統合する操作を支援してくれるツール